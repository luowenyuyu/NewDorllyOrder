//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace AmmeterLabelPrintService.DorllyOrderService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ExecuteNonQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback PopulateDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenOrderFromParkinLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenOrderFromConferenceRepairOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenOrderFromCompRepairOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenOrderFromCompRepairForWOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeterInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterReadoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatisticsList_ResourseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatisticsList_RoomOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatisticsList_Room_ChartsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOccupancyRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatisticsList_WP_ChartsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatisticsList_WP_Charts1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatisticsList_BBOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::AmmeterLabelPrintService.Properties.Settings.Default.AmmeterLabelPrintService_DorllyOrderService_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ExecuteNonQueryCompletedEventHandler ExecuteNonQueryCompleted;
        
        /// <remarks/>
        public event PopulateDataSetCompletedEventHandler PopulateDataSetCompleted;
        
        /// <remarks/>
        public event GetServerDateTimeCompletedEventHandler GetServerDateTimeCompleted;
        
        /// <remarks/>
        public event GenOrderFromParkinLotCompletedEventHandler GenOrderFromParkinLotCompleted;
        
        /// <remarks/>
        public event GenOrderFromConferenceRepairCompletedEventHandler GenOrderFromConferenceRepairCompleted;
        
        /// <remarks/>
        public event GenOrderFromCompRepairCompletedEventHandler GenOrderFromCompRepairCompleted;
        
        /// <remarks/>
        public event GenOrderFromCompRepairForWOCompletedEventHandler GenOrderFromCompRepairForWOCompleted;
        
        /// <remarks/>
        public event GetMeterInfoCompletedEventHandler GetMeterInfoCompleted;
        
        /// <remarks/>
        public event MeterReadoutCompletedEventHandler MeterReadoutCompleted;
        
        /// <remarks/>
        public event GetStatisticsList_ResourseCompletedEventHandler GetStatisticsList_ResourseCompleted;
        
        /// <remarks/>
        public event GetStatisticsList_RoomCompletedEventHandler GetStatisticsList_RoomCompleted;
        
        /// <remarks/>
        public event GetStatisticsList_Room_ChartsCompletedEventHandler GetStatisticsList_Room_ChartsCompleted;
        
        /// <remarks/>
        public event GetOccupancyRateCompletedEventHandler GetOccupancyRateCompleted;
        
        /// <remarks/>
        public event GetStatisticsList_WP_ChartsCompletedEventHandler GetStatisticsList_WP_ChartsCompleted;
        
        /// <remarks/>
        public event GetStatisticsList_WP_Charts1CompletedEventHandler GetStatisticsList_WP_Charts1Completed;
        
        /// <remarks/>
        public event GetStatisticsList_BBCompletedEventHandler GetStatisticsList_BBCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecuteNonQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExecuteNonQuery(string cmdText) {
            object[] results = this.Invoke("ExecuteNonQuery", new object[] {
                        cmdText});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteNonQueryAsync(string cmdText) {
            this.ExecuteNonQueryAsync(cmdText, null);
        }
        
        /// <remarks/>
        public void ExecuteNonQueryAsync(string cmdText, object userState) {
            if ((this.ExecuteNonQueryOperationCompleted == null)) {
                this.ExecuteNonQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteNonQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteNonQuery", new object[] {
                        cmdText}, this.ExecuteNonQueryOperationCompleted, userState);
        }
        
        private void OnExecuteNonQueryOperationCompleted(object arg) {
            if ((this.ExecuteNonQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteNonQueryCompleted(this, new ExecuteNonQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PopulateDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PopulateDataSet(string cmdText) {
            object[] results = this.Invoke("PopulateDataSet", new object[] {
                        cmdText});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PopulateDataSetAsync(string cmdText) {
            this.PopulateDataSetAsync(cmdText, null);
        }
        
        /// <remarks/>
        public void PopulateDataSetAsync(string cmdText, object userState) {
            if ((this.PopulateDataSetOperationCompleted == null)) {
                this.PopulateDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPopulateDataSetOperationCompleted);
            }
            this.InvokeAsync("PopulateDataSet", new object[] {
                        cmdText}, this.PopulateDataSetOperationCompleted, userState);
        }
        
        private void OnPopulateDataSetOperationCompleted(object arg) {
            if ((this.PopulateDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PopulateDataSetCompleted(this, new PopulateDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetServerDateTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetServerDateTime() {
            object[] results = this.Invoke("GetServerDateTime", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerDateTimeAsync() {
            this.GetServerDateTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetServerDateTimeAsync(object userState) {
            if ((this.GetServerDateTimeOperationCompleted == null)) {
                this.GetServerDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerDateTimeOperationCompleted);
            }
            this.InvokeAsync("GetServerDateTime", new object[0], this.GetServerDateTimeOperationCompleted, userState);
        }
        
        private void OnGetServerDateTimeOperationCompleted(object arg) {
            if ((this.GetServerDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerDateTimeCompleted(this, new GetServerDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenOrderFromParkinLot", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GenOrderFromParkinLot(string PRTableName, string MCTableName, string Guid, string Date) {
            object[] results = this.Invoke("GenOrderFromParkinLot", new object[] {
                        PRTableName,
                        MCTableName,
                        Guid,
                        Date});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenOrderFromParkinLotAsync(string PRTableName, string MCTableName, string Guid, string Date) {
            this.GenOrderFromParkinLotAsync(PRTableName, MCTableName, Guid, Date, null);
        }
        
        /// <remarks/>
        public void GenOrderFromParkinLotAsync(string PRTableName, string MCTableName, string Guid, string Date, object userState) {
            if ((this.GenOrderFromParkinLotOperationCompleted == null)) {
                this.GenOrderFromParkinLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenOrderFromParkinLotOperationCompleted);
            }
            this.InvokeAsync("GenOrderFromParkinLot", new object[] {
                        PRTableName,
                        MCTableName,
                        Guid,
                        Date}, this.GenOrderFromParkinLotOperationCompleted, userState);
        }
        
        private void OnGenOrderFromParkinLotOperationCompleted(object arg) {
            if ((this.GenOrderFromParkinLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenOrderFromParkinLotCompleted(this, new GenOrderFromParkinLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenOrderFromConferenceRepair", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GenOrderFromConferenceRepair(string ResourceNo, string ResourceName, decimal amount, string Remark, string KEY) {
            object[] results = this.Invoke("GenOrderFromConferenceRepair", new object[] {
                        ResourceNo,
                        ResourceName,
                        amount,
                        Remark,
                        KEY});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenOrderFromConferenceRepairAsync(string ResourceNo, string ResourceName, decimal amount, string Remark, string KEY) {
            this.GenOrderFromConferenceRepairAsync(ResourceNo, ResourceName, amount, Remark, KEY, null);
        }
        
        /// <remarks/>
        public void GenOrderFromConferenceRepairAsync(string ResourceNo, string ResourceName, decimal amount, string Remark, string KEY, object userState) {
            if ((this.GenOrderFromConferenceRepairOperationCompleted == null)) {
                this.GenOrderFromConferenceRepairOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenOrderFromConferenceRepairOperationCompleted);
            }
            this.InvokeAsync("GenOrderFromConferenceRepair", new object[] {
                        ResourceNo,
                        ResourceName,
                        amount,
                        Remark,
                        KEY}, this.GenOrderFromConferenceRepairOperationCompleted, userState);
        }
        
        private void OnGenOrderFromConferenceRepairOperationCompleted(object arg) {
            if ((this.GenOrderFromConferenceRepairCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenOrderFromConferenceRepairCompleted(this, new GenOrderFromConferenceRepairCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenOrderFromCompRepair", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GenOrderFromCompRepair(string CustNo, decimal amount, string Remark, string KEY) {
            object[] results = this.Invoke("GenOrderFromCompRepair", new object[] {
                        CustNo,
                        amount,
                        Remark,
                        KEY});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenOrderFromCompRepairAsync(string CustNo, decimal amount, string Remark, string KEY) {
            this.GenOrderFromCompRepairAsync(CustNo, amount, Remark, KEY, null);
        }
        
        /// <remarks/>
        public void GenOrderFromCompRepairAsync(string CustNo, decimal amount, string Remark, string KEY, object userState) {
            if ((this.GenOrderFromCompRepairOperationCompleted == null)) {
                this.GenOrderFromCompRepairOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenOrderFromCompRepairOperationCompleted);
            }
            this.InvokeAsync("GenOrderFromCompRepair", new object[] {
                        CustNo,
                        amount,
                        Remark,
                        KEY}, this.GenOrderFromCompRepairOperationCompleted, userState);
        }
        
        private void OnGenOrderFromCompRepairOperationCompleted(object arg) {
            if ((this.GenOrderFromCompRepairCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenOrderFromCompRepairCompleted(this, new GenOrderFromCompRepairCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenOrderFromCompRepairForWO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GenOrderFromCompRepairForWO(string CustNo, decimal amount, string Remark, string KEY, out string OrderNo) {
            object[] results = this.Invoke("GenOrderFromCompRepairForWO", new object[] {
                        CustNo,
                        amount,
                        Remark,
                        KEY});
            OrderNo = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenOrderFromCompRepairForWOAsync(string CustNo, decimal amount, string Remark, string KEY) {
            this.GenOrderFromCompRepairForWOAsync(CustNo, amount, Remark, KEY, null);
        }
        
        /// <remarks/>
        public void GenOrderFromCompRepairForWOAsync(string CustNo, decimal amount, string Remark, string KEY, object userState) {
            if ((this.GenOrderFromCompRepairForWOOperationCompleted == null)) {
                this.GenOrderFromCompRepairForWOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenOrderFromCompRepairForWOOperationCompleted);
            }
            this.InvokeAsync("GenOrderFromCompRepairForWO", new object[] {
                        CustNo,
                        amount,
                        Remark,
                        KEY}, this.GenOrderFromCompRepairForWOOperationCompleted, userState);
        }
        
        private void OnGenOrderFromCompRepairForWOOperationCompleted(object arg) {
            if ((this.GenOrderFromCompRepairForWOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenOrderFromCompRepairForWOCompleted(this, new GenOrderFromCompRepairForWOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMeterInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMeterInfo(string MeterNo, string KEY, out string meterRMID, out decimal readout, out int digit) {
            object[] results = this.Invoke("GetMeterInfo", new object[] {
                        MeterNo,
                        KEY});
            meterRMID = ((string)(results[1]));
            readout = ((decimal)(results[2]));
            digit = ((int)(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeterInfoAsync(string MeterNo, string KEY) {
            this.GetMeterInfoAsync(MeterNo, KEY, null);
        }
        
        /// <remarks/>
        public void GetMeterInfoAsync(string MeterNo, string KEY, object userState) {
            if ((this.GetMeterInfoOperationCompleted == null)) {
                this.GetMeterInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeterInfoOperationCompleted);
            }
            this.InvokeAsync("GetMeterInfo", new object[] {
                        MeterNo,
                        KEY}, this.GetMeterInfoOperationCompleted, userState);
        }
        
        private void OnGetMeterInfoOperationCompleted(object arg) {
            if ((this.GetMeterInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeterInfoCompleted(this, new GetMeterInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MeterReadout", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MeterReadout(string MeterNo, string ReadoutType, decimal LastReadout, decimal Readout, decimal JoinReadings, decimal Readings, string UserName, string KEY, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] ImgByte) {
            object[] results = this.Invoke("MeterReadout", new object[] {
                        MeterNo,
                        ReadoutType,
                        LastReadout,
                        Readout,
                        JoinReadings,
                        Readings,
                        UserName,
                        KEY,
                        ImgByte});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MeterReadoutAsync(string MeterNo, string ReadoutType, decimal LastReadout, decimal Readout, decimal JoinReadings, decimal Readings, string UserName, string KEY, byte[] ImgByte) {
            this.MeterReadoutAsync(MeterNo, ReadoutType, LastReadout, Readout, JoinReadings, Readings, UserName, KEY, ImgByte, null);
        }
        
        /// <remarks/>
        public void MeterReadoutAsync(string MeterNo, string ReadoutType, decimal LastReadout, decimal Readout, decimal JoinReadings, decimal Readings, string UserName, string KEY, byte[] ImgByte, object userState) {
            if ((this.MeterReadoutOperationCompleted == null)) {
                this.MeterReadoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterReadoutOperationCompleted);
            }
            this.InvokeAsync("MeterReadout", new object[] {
                        MeterNo,
                        ReadoutType,
                        LastReadout,
                        Readout,
                        JoinReadings,
                        Readings,
                        UserName,
                        KEY,
                        ImgByte}, this.MeterReadoutOperationCompleted, userState);
        }
        
        private void OnMeterReadoutOperationCompleted(object arg) {
            if ((this.MeterReadoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterReadoutCompleted(this, new MeterReadoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStatisticsList_Resourse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetStatisticsList_Resourse(string ResType, string StartDate, string EndDate, string KEY) {
            object[] results = this.Invoke("GetStatisticsList_Resourse", new object[] {
                        ResType,
                        StartDate,
                        EndDate,
                        KEY});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatisticsList_ResourseAsync(string ResType, string StartDate, string EndDate, string KEY) {
            this.GetStatisticsList_ResourseAsync(ResType, StartDate, EndDate, KEY, null);
        }
        
        /// <remarks/>
        public void GetStatisticsList_ResourseAsync(string ResType, string StartDate, string EndDate, string KEY, object userState) {
            if ((this.GetStatisticsList_ResourseOperationCompleted == null)) {
                this.GetStatisticsList_ResourseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatisticsList_ResourseOperationCompleted);
            }
            this.InvokeAsync("GetStatisticsList_Resourse", new object[] {
                        ResType,
                        StartDate,
                        EndDate,
                        KEY}, this.GetStatisticsList_ResourseOperationCompleted, userState);
        }
        
        private void OnGetStatisticsList_ResourseOperationCompleted(object arg) {
            if ((this.GetStatisticsList_ResourseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatisticsList_ResourseCompleted(this, new GetStatisticsList_ResourseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStatisticsList_Room", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStatisticsList_Room(string StartDate, string EndDate, string KEY) {
            object[] results = this.Invoke("GetStatisticsList_Room", new object[] {
                        StartDate,
                        EndDate,
                        KEY});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatisticsList_RoomAsync(string StartDate, string EndDate, string KEY) {
            this.GetStatisticsList_RoomAsync(StartDate, EndDate, KEY, null);
        }
        
        /// <remarks/>
        public void GetStatisticsList_RoomAsync(string StartDate, string EndDate, string KEY, object userState) {
            if ((this.GetStatisticsList_RoomOperationCompleted == null)) {
                this.GetStatisticsList_RoomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatisticsList_RoomOperationCompleted);
            }
            this.InvokeAsync("GetStatisticsList_Room", new object[] {
                        StartDate,
                        EndDate,
                        KEY}, this.GetStatisticsList_RoomOperationCompleted, userState);
        }
        
        private void OnGetStatisticsList_RoomOperationCompleted(object arg) {
            if ((this.GetStatisticsList_RoomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatisticsList_RoomCompleted(this, new GetStatisticsList_RoomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStatisticsList_Room_Charts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetStatisticsList_Room_Charts(string StartDate, string EndDate, string KEY) {
            object[] results = this.Invoke("GetStatisticsList_Room_Charts", new object[] {
                        StartDate,
                        EndDate,
                        KEY});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatisticsList_Room_ChartsAsync(string StartDate, string EndDate, string KEY) {
            this.GetStatisticsList_Room_ChartsAsync(StartDate, EndDate, KEY, null);
        }
        
        /// <remarks/>
        public void GetStatisticsList_Room_ChartsAsync(string StartDate, string EndDate, string KEY, object userState) {
            if ((this.GetStatisticsList_Room_ChartsOperationCompleted == null)) {
                this.GetStatisticsList_Room_ChartsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatisticsList_Room_ChartsOperationCompleted);
            }
            this.InvokeAsync("GetStatisticsList_Room_Charts", new object[] {
                        StartDate,
                        EndDate,
                        KEY}, this.GetStatisticsList_Room_ChartsOperationCompleted, userState);
        }
        
        private void OnGetStatisticsList_Room_ChartsOperationCompleted(object arg) {
            if ((this.GetStatisticsList_Room_ChartsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatisticsList_Room_ChartsCompleted(this, new GetStatisticsList_Room_ChartsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOccupancyRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetOccupancyRate(string StartDate, string EndDate, string KEY) {
            object[] results = this.Invoke("GetOccupancyRate", new object[] {
                        StartDate,
                        EndDate,
                        KEY});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetOccupancyRateAsync(string StartDate, string EndDate, string KEY) {
            this.GetOccupancyRateAsync(StartDate, EndDate, KEY, null);
        }
        
        /// <remarks/>
        public void GetOccupancyRateAsync(string StartDate, string EndDate, string KEY, object userState) {
            if ((this.GetOccupancyRateOperationCompleted == null)) {
                this.GetOccupancyRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOccupancyRateOperationCompleted);
            }
            this.InvokeAsync("GetOccupancyRate", new object[] {
                        StartDate,
                        EndDate,
                        KEY}, this.GetOccupancyRateOperationCompleted, userState);
        }
        
        private void OnGetOccupancyRateOperationCompleted(object arg) {
            if ((this.GetOccupancyRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOccupancyRateCompleted(this, new GetOccupancyRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStatisticsList_WP_Charts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetStatisticsList_WP_Charts(string StartDate, string EndDate, string KEY) {
            object[] results = this.Invoke("GetStatisticsList_WP_Charts", new object[] {
                        StartDate,
                        EndDate,
                        KEY});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatisticsList_WP_ChartsAsync(string StartDate, string EndDate, string KEY) {
            this.GetStatisticsList_WP_ChartsAsync(StartDate, EndDate, KEY, null);
        }
        
        /// <remarks/>
        public void GetStatisticsList_WP_ChartsAsync(string StartDate, string EndDate, string KEY, object userState) {
            if ((this.GetStatisticsList_WP_ChartsOperationCompleted == null)) {
                this.GetStatisticsList_WP_ChartsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatisticsList_WP_ChartsOperationCompleted);
            }
            this.InvokeAsync("GetStatisticsList_WP_Charts", new object[] {
                        StartDate,
                        EndDate,
                        KEY}, this.GetStatisticsList_WP_ChartsOperationCompleted, userState);
        }
        
        private void OnGetStatisticsList_WP_ChartsOperationCompleted(object arg) {
            if ((this.GetStatisticsList_WP_ChartsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatisticsList_WP_ChartsCompleted(this, new GetStatisticsList_WP_ChartsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStatisticsList_WP_Charts1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetStatisticsList_WP_Charts1(string MinMonth, string MaxMonth, string KEY) {
            object[] results = this.Invoke("GetStatisticsList_WP_Charts1", new object[] {
                        MinMonth,
                        MaxMonth,
                        KEY});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatisticsList_WP_Charts1Async(string MinMonth, string MaxMonth, string KEY) {
            this.GetStatisticsList_WP_Charts1Async(MinMonth, MaxMonth, KEY, null);
        }
        
        /// <remarks/>
        public void GetStatisticsList_WP_Charts1Async(string MinMonth, string MaxMonth, string KEY, object userState) {
            if ((this.GetStatisticsList_WP_Charts1OperationCompleted == null)) {
                this.GetStatisticsList_WP_Charts1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatisticsList_WP_Charts1OperationCompleted);
            }
            this.InvokeAsync("GetStatisticsList_WP_Charts1", new object[] {
                        MinMonth,
                        MaxMonth,
                        KEY}, this.GetStatisticsList_WP_Charts1OperationCompleted, userState);
        }
        
        private void OnGetStatisticsList_WP_Charts1OperationCompleted(object arg) {
            if ((this.GetStatisticsList_WP_Charts1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatisticsList_WP_Charts1Completed(this, new GetStatisticsList_WP_Charts1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStatisticsList_BB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetStatisticsList_BB(string StartDate, string EndDate, string KEY) {
            object[] results = this.Invoke("GetStatisticsList_BB", new object[] {
                        StartDate,
                        EndDate,
                        KEY});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatisticsList_BBAsync(string StartDate, string EndDate, string KEY) {
            this.GetStatisticsList_BBAsync(StartDate, EndDate, KEY, null);
        }
        
        /// <remarks/>
        public void GetStatisticsList_BBAsync(string StartDate, string EndDate, string KEY, object userState) {
            if ((this.GetStatisticsList_BBOperationCompleted == null)) {
                this.GetStatisticsList_BBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatisticsList_BBOperationCompleted);
            }
            this.InvokeAsync("GetStatisticsList_BB", new object[] {
                        StartDate,
                        EndDate,
                        KEY}, this.GetStatisticsList_BBOperationCompleted, userState);
        }
        
        private void OnGetStatisticsList_BBOperationCompleted(object arg) {
            if ((this.GetStatisticsList_BBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatisticsList_BBCompleted(this, new GetStatisticsList_BBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExecuteNonQueryCompletedEventHandler(object sender, ExecuteNonQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteNonQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteNonQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void PopulateDataSetCompletedEventHandler(object sender, PopulateDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PopulateDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PopulateDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetServerDateTimeCompletedEventHandler(object sender, GetServerDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GenOrderFromParkinLotCompletedEventHandler(object sender, GenOrderFromParkinLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenOrderFromParkinLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenOrderFromParkinLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GenOrderFromConferenceRepairCompletedEventHandler(object sender, GenOrderFromConferenceRepairCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenOrderFromConferenceRepairCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenOrderFromConferenceRepairCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GenOrderFromCompRepairCompletedEventHandler(object sender, GenOrderFromCompRepairCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenOrderFromCompRepairCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenOrderFromCompRepairCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GenOrderFromCompRepairForWOCompletedEventHandler(object sender, GenOrderFromCompRepairForWOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenOrderFromCompRepairForWOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenOrderFromCompRepairForWOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string OrderNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetMeterInfoCompletedEventHandler(object sender, GetMeterInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeterInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeterInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string meterRMID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public decimal readout {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int digit {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void MeterReadoutCompletedEventHandler(object sender, MeterReadoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterReadoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterReadoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStatisticsList_ResourseCompletedEventHandler(object sender, GetStatisticsList_ResourseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatisticsList_ResourseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatisticsList_ResourseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStatisticsList_RoomCompletedEventHandler(object sender, GetStatisticsList_RoomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatisticsList_RoomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatisticsList_RoomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStatisticsList_Room_ChartsCompletedEventHandler(object sender, GetStatisticsList_Room_ChartsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatisticsList_Room_ChartsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatisticsList_Room_ChartsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetOccupancyRateCompletedEventHandler(object sender, GetOccupancyRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOccupancyRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOccupancyRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStatisticsList_WP_ChartsCompletedEventHandler(object sender, GetStatisticsList_WP_ChartsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatisticsList_WP_ChartsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatisticsList_WP_ChartsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStatisticsList_WP_Charts1CompletedEventHandler(object sender, GetStatisticsList_WP_Charts1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatisticsList_WP_Charts1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatisticsList_WP_Charts1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStatisticsList_BBCompletedEventHandler(object sender, GetStatisticsList_BBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatisticsList_BBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatisticsList_BBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591