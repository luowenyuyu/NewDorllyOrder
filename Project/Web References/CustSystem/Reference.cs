//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace project.CustSystem {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CustomerSyncSoap", Namespace="http://tempuri.org/")]
    public partial class CustomerSync : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchIndustrialParkListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchSourceSystemListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchSoftwareInstanceListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CustomerSync() {
            this.Url = global::project.Properties.Settings.Default.project_CustSystem_CustomerSync;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event CustomerInsertCompletedEventHandler CustomerInsertCompleted;
        
        /// <remarks/>
        public event CustomerDeleteCompletedEventHandler CustomerDeleteCompleted;
        
        /// <remarks/>
        public event CustomerUpdateCompletedEventHandler CustomerUpdateCompleted;
        
        /// <remarks/>
        public event FetchIndustrialParkListCompletedEventHandler FetchIndustrialParkListCompleted;
        
        /// <remarks/>
        public event FetchSourceSystemListCompletedEventHandler FetchSourceSystemListCompleted;
        
        /// <remarks/>
        public event FetchSoftwareInstanceListCompletedEventHandler FetchSoftwareInstanceListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld(string hello) {
            object[] results = this.Invoke("HelloWorld", new object[] {
                        hello});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync(string hello) {
            this.HelloWorldAsync(hello, null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(string hello, object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[] {
                        hello}, this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CustomerInsert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CustomerInsert(CustomerInfo customerInfo) {
            object[] results = this.Invoke("CustomerInsert", new object[] {
                        customerInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerInsertAsync(CustomerInfo customerInfo) {
            this.CustomerInsertAsync(customerInfo, null);
        }
        
        /// <remarks/>
        public void CustomerInsertAsync(CustomerInfo customerInfo, object userState) {
            if ((this.CustomerInsertOperationCompleted == null)) {
                this.CustomerInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerInsertOperationCompleted);
            }
            this.InvokeAsync("CustomerInsert", new object[] {
                        customerInfo}, this.CustomerInsertOperationCompleted, userState);
        }
        
        private void OnCustomerInsertOperationCompleted(object arg) {
            if ((this.CustomerInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerInsertCompleted(this, new CustomerInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CustomerDelete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CustomerDelete(string softwareInstanceShortName, string custIdOnCenterServer) {
            object[] results = this.Invoke("CustomerDelete", new object[] {
                        softwareInstanceShortName,
                        custIdOnCenterServer});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerDeleteAsync(string softwareInstanceShortName, string custIdOnCenterServer) {
            this.CustomerDeleteAsync(softwareInstanceShortName, custIdOnCenterServer, null);
        }
        
        /// <remarks/>
        public void CustomerDeleteAsync(string softwareInstanceShortName, string custIdOnCenterServer, object userState) {
            if ((this.CustomerDeleteOperationCompleted == null)) {
                this.CustomerDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerDeleteOperationCompleted);
            }
            this.InvokeAsync("CustomerDelete", new object[] {
                        softwareInstanceShortName,
                        custIdOnCenterServer}, this.CustomerDeleteOperationCompleted, userState);
        }
        
        private void OnCustomerDeleteOperationCompleted(object arg) {
            if ((this.CustomerDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerDeleteCompleted(this, new CustomerDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CustomerUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CustomerUpdate(CustomerInfo customerInfo) {
            object[] results = this.Invoke("CustomerUpdate", new object[] {
                        customerInfo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerUpdateAsync(CustomerInfo customerInfo) {
            this.CustomerUpdateAsync(customerInfo, null);
        }
        
        /// <remarks/>
        public void CustomerUpdateAsync(CustomerInfo customerInfo, object userState) {
            if ((this.CustomerUpdateOperationCompleted == null)) {
                this.CustomerUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerUpdateOperationCompleted);
            }
            this.InvokeAsync("CustomerUpdate", new object[] {
                        customerInfo}, this.CustomerUpdateOperationCompleted, userState);
        }
        
        private void OnCustomerUpdateOperationCompleted(object arg) {
            if ((this.CustomerUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerUpdateCompleted(this, new CustomerUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FetchIndustrialParkList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IndustrialPark[] FetchIndustrialParkList(string keyWord) {
            object[] results = this.Invoke("FetchIndustrialParkList", new object[] {
                        keyWord});
            return ((IndustrialPark[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchIndustrialParkListAsync(string keyWord) {
            this.FetchIndustrialParkListAsync(keyWord, null);
        }
        
        /// <remarks/>
        public void FetchIndustrialParkListAsync(string keyWord, object userState) {
            if ((this.FetchIndustrialParkListOperationCompleted == null)) {
                this.FetchIndustrialParkListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchIndustrialParkListOperationCompleted);
            }
            this.InvokeAsync("FetchIndustrialParkList", new object[] {
                        keyWord}, this.FetchIndustrialParkListOperationCompleted, userState);
        }
        
        private void OnFetchIndustrialParkListOperationCompleted(object arg) {
            if ((this.FetchIndustrialParkListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchIndustrialParkListCompleted(this, new FetchIndustrialParkListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FetchSourceSystemList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SourceSystem[] FetchSourceSystemList(string keyWord) {
            object[] results = this.Invoke("FetchSourceSystemList", new object[] {
                        keyWord});
            return ((SourceSystem[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchSourceSystemListAsync(string keyWord) {
            this.FetchSourceSystemListAsync(keyWord, null);
        }
        
        /// <remarks/>
        public void FetchSourceSystemListAsync(string keyWord, object userState) {
            if ((this.FetchSourceSystemListOperationCompleted == null)) {
                this.FetchSourceSystemListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchSourceSystemListOperationCompleted);
            }
            this.InvokeAsync("FetchSourceSystemList", new object[] {
                        keyWord}, this.FetchSourceSystemListOperationCompleted, userState);
        }
        
        private void OnFetchSourceSystemListOperationCompleted(object arg) {
            if ((this.FetchSourceSystemListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchSourceSystemListCompleted(this, new FetchSourceSystemListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FetchSoftwareInstanceList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SoftwareInstance[] FetchSoftwareInstanceList(string keyWord) {
            object[] results = this.Invoke("FetchSoftwareInstanceList", new object[] {
                        keyWord});
            return ((SoftwareInstance[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchSoftwareInstanceListAsync(string keyWord) {
            this.FetchSoftwareInstanceListAsync(keyWord, null);
        }
        
        /// <remarks/>
        public void FetchSoftwareInstanceListAsync(string keyWord, object userState) {
            if ((this.FetchSoftwareInstanceListOperationCompleted == null)) {
                this.FetchSoftwareInstanceListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchSoftwareInstanceListOperationCompleted);
            }
            this.InvokeAsync("FetchSoftwareInstanceList", new object[] {
                        keyWord}, this.FetchSoftwareInstanceListOperationCompleted, userState);
        }
        
        private void OnFetchSoftwareInstanceListOperationCompleted(object arg) {
            if ((this.FetchSoftwareInstanceListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchSoftwareInstanceListCompleted(this, new FetchSoftwareInstanceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CustomerInfo {
        
        private int snField;
        
        private string custNoField;
        
        private string parkNoField;
        
        private string sourceSystem_ShortNameField;
        
        private string softwareInstance_ShortNameField;
        
        private string custNameField;
        
        private string custShortNameField;
        
        private string custTypeField;
        
        private string representativeField;
        
        private string businessScopeField;
        
        private string custLicenseNOField;
        
        private string repIDCardField;
        
        private string custContactField;
        
        private string custContactPersonJobField;
        
        private string custTelField;
        
        private string custContactMobileField;
        
        private string custEmailField;
        
        private string custBankTitleField;
        
        private string custBankAccountField;
        
        private string custBankField;
        
        private string custStatusField;
        
        private System.Nullable<System.DateTime> custCreateDateField;
        
        private System.Nullable<System.DateTime> updateTimeField;
        
        private string custCreatorField;
        
        private short isExternalField;
        
        private System.Nullable<System.DateTime> retireDateField;
        
        private string custIdOnCenterServerField;
        
        /// <remarks/>
        public int SN {
            get {
                return this.snField;
            }
            set {
                this.snField = value;
            }
        }
        
        /// <remarks/>
        public string CustNo {
            get {
                return this.custNoField;
            }
            set {
                this.custNoField = value;
            }
        }
        
        /// <remarks/>
        public string ParkNo {
            get {
                return this.parkNoField;
            }
            set {
                this.parkNoField = value;
            }
        }
        
        /// <remarks/>
        public string SourceSystem_ShortName {
            get {
                return this.sourceSystem_ShortNameField;
            }
            set {
                this.sourceSystem_ShortNameField = value;
            }
        }
        
        /// <remarks/>
        public string SoftwareInstance_ShortName {
            get {
                return this.softwareInstance_ShortNameField;
            }
            set {
                this.softwareInstance_ShortNameField = value;
            }
        }
        
        /// <remarks/>
        public string CustName {
            get {
                return this.custNameField;
            }
            set {
                this.custNameField = value;
            }
        }
        
        /// <remarks/>
        public string CustShortName {
            get {
                return this.custShortNameField;
            }
            set {
                this.custShortNameField = value;
            }
        }
        
        /// <remarks/>
        public string CustType {
            get {
                return this.custTypeField;
            }
            set {
                this.custTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Representative {
            get {
                return this.representativeField;
            }
            set {
                this.representativeField = value;
            }
        }
        
        /// <remarks/>
        public string BusinessScope {
            get {
                return this.businessScopeField;
            }
            set {
                this.businessScopeField = value;
            }
        }
        
        /// <remarks/>
        public string CustLicenseNO {
            get {
                return this.custLicenseNOField;
            }
            set {
                this.custLicenseNOField = value;
            }
        }
        
        /// <remarks/>
        public string RepIDCard {
            get {
                return this.repIDCardField;
            }
            set {
                this.repIDCardField = value;
            }
        }
        
        /// <remarks/>
        public string CustContact {
            get {
                return this.custContactField;
            }
            set {
                this.custContactField = value;
            }
        }
        
        /// <remarks/>
        public string CustContactPersonJob {
            get {
                return this.custContactPersonJobField;
            }
            set {
                this.custContactPersonJobField = value;
            }
        }
        
        /// <remarks/>
        public string CustTel {
            get {
                return this.custTelField;
            }
            set {
                this.custTelField = value;
            }
        }
        
        /// <remarks/>
        public string CustContactMobile {
            get {
                return this.custContactMobileField;
            }
            set {
                this.custContactMobileField = value;
            }
        }
        
        /// <remarks/>
        public string CustEmail {
            get {
                return this.custEmailField;
            }
            set {
                this.custEmailField = value;
            }
        }
        
        /// <remarks/>
        public string CustBankTitle {
            get {
                return this.custBankTitleField;
            }
            set {
                this.custBankTitleField = value;
            }
        }
        
        /// <remarks/>
        public string CustBankAccount {
            get {
                return this.custBankAccountField;
            }
            set {
                this.custBankAccountField = value;
            }
        }
        
        /// <remarks/>
        public string CustBank {
            get {
                return this.custBankField;
            }
            set {
                this.custBankField = value;
            }
        }
        
        /// <remarks/>
        public string CustStatus {
            get {
                return this.custStatusField;
            }
            set {
                this.custStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CustCreateDate {
            get {
                return this.custCreateDateField;
            }
            set {
                this.custCreateDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> UpdateTime {
            get {
                return this.updateTimeField;
            }
            set {
                this.updateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string CustCreator {
            get {
                return this.custCreatorField;
            }
            set {
                this.custCreatorField = value;
            }
        }
        
        /// <remarks/>
        public short IsExternal {
            get {
                return this.isExternalField;
            }
            set {
                this.isExternalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> RetireDate {
            get {
                return this.retireDateField;
            }
            set {
                this.retireDateField = value;
            }
        }
        
        /// <remarks/>
        public string CustIdOnCenterServer {
            get {
                return this.custIdOnCenterServerField;
            }
            set {
                this.custIdOnCenterServerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SoftwareInstance {
        
        private string shortNameField;
        
        private string softwareInstanceNameField;
        
        /// <remarks/>
        public string ShortName {
            get {
                return this.shortNameField;
            }
            set {
                this.shortNameField = value;
            }
        }
        
        /// <remarks/>
        public string SoftwareInstanceName {
            get {
                return this.softwareInstanceNameField;
            }
            set {
                this.softwareInstanceNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SourceSystem {
        
        private string shortNameField;
        
        private string sourceSystemNameField;
        
        /// <remarks/>
        public string ShortName {
            get {
                return this.shortNameField;
            }
            set {
                this.shortNameField = value;
            }
        }
        
        /// <remarks/>
        public string SourceSystemName {
            get {
                return this.sourceSystemNameField;
            }
            set {
                this.sourceSystemNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class IndustrialPark {
        
        private int snField;
        
        private string industrialParkNameField;
        
        /// <remarks/>
        public int SN {
            get {
                return this.snField;
            }
            set {
                this.snField = value;
            }
        }
        
        /// <remarks/>
        public string IndustrialParkName {
            get {
                return this.industrialParkNameField;
            }
            set {
                this.industrialParkNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CustomerInsertCompletedEventHandler(object sender, CustomerInsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerInsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerInsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CustomerDeleteCompletedEventHandler(object sender, CustomerDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CustomerUpdateCompletedEventHandler(object sender, CustomerUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FetchIndustrialParkListCompletedEventHandler(object sender, FetchIndustrialParkListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchIndustrialParkListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchIndustrialParkListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IndustrialPark[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IndustrialPark[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FetchSourceSystemListCompletedEventHandler(object sender, FetchSourceSystemListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchSourceSystemListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchSourceSystemListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SourceSystem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SourceSystem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FetchSoftwareInstanceListCompletedEventHandler(object sender, FetchSoftwareInstanceListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchSoftwareInstanceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchSoftwareInstanceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SoftwareInstance[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SoftwareInstance[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591