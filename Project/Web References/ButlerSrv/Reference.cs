//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace project.ButlerSrv {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AppServiceSoap", Namespace="http://tempuri.org/")]
    public partial class AppService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetRefundListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefundCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefundLoadOperationCompleted;
        
        private System.Threading.SendOrPostCallback Refund_CROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCRDispositListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCRDispositCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CRDispositLoadOperationCompleted;
        
        private System.Threading.SendOrPostCallback Refund_DisposritOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetCompRepairFeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatisticsList_ResourseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatisticsList_Resourse_ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatisticsList_Resourse_ChartsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConferenceRoomReserveList_ResourceOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AppService() {
            this.Url = global::project.Properties.Settings.Default.project_ButlerSrv_AppService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetRefundListCompletedEventHandler GetRefundListCompleted;
        
        /// <remarks/>
        public event GetRefundCountCompletedEventHandler GetRefundCountCompleted;
        
        /// <remarks/>
        public event RefundLoadCompletedEventHandler RefundLoadCompleted;
        
        /// <remarks/>
        public event Refund_CRCompletedEventHandler Refund_CRCompleted;
        
        /// <remarks/>
        public event GetCRDispositListCompletedEventHandler GetCRDispositListCompleted;
        
        /// <remarks/>
        public event GetCRDispositCountCompletedEventHandler GetCRDispositCountCompleted;
        
        /// <remarks/>
        public event CRDispositLoadCompletedEventHandler CRDispositLoadCompleted;
        
        /// <remarks/>
        public event Refund_DisposritCompletedEventHandler Refund_DisposritCompleted;
        
        /// <remarks/>
        public event SetCompRepairFeeCompletedEventHandler SetCompRepairFeeCompleted;
        
        /// <remarks/>
        public event SetCustomerCompletedEventHandler SetCustomerCompleted;
        
        /// <remarks/>
        public event UpdateCustomerCompletedEventHandler UpdateCustomerCompleted;
        
        /// <remarks/>
        public event GetStatisticsList_ResourseCompletedEventHandler GetStatisticsList_ResourseCompleted;
        
        /// <remarks/>
        public event GetStatisticsList_Resourse_ListCompletedEventHandler GetStatisticsList_Resourse_ListCompleted;
        
        /// <remarks/>
        public event GetStatisticsList_Resourse_ChartsCompletedEventHandler GetStatisticsList_Resourse_ChartsCompleted;
        
        /// <remarks/>
        public event GetConferenceRoomReserveList_ResourceCompletedEventHandler GetConferenceRoomReserveList_ResourceCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRefundList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRefundList(string ParkNo, string MinApplyDate, string MaxApplyDate, string State, int startRow, int pageSize, string Key) {
            object[] results = this.Invoke("GetRefundList", new object[] {
                        ParkNo,
                        MinApplyDate,
                        MaxApplyDate,
                        State,
                        startRow,
                        pageSize,
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundListAsync(string ParkNo, string MinApplyDate, string MaxApplyDate, string State, int startRow, int pageSize, string Key) {
            this.GetRefundListAsync(ParkNo, MinApplyDate, MaxApplyDate, State, startRow, pageSize, Key, null);
        }
        
        /// <remarks/>
        public void GetRefundListAsync(string ParkNo, string MinApplyDate, string MaxApplyDate, string State, int startRow, int pageSize, string Key, object userState) {
            if ((this.GetRefundListOperationCompleted == null)) {
                this.GetRefundListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundListOperationCompleted);
            }
            this.InvokeAsync("GetRefundList", new object[] {
                        ParkNo,
                        MinApplyDate,
                        MaxApplyDate,
                        State,
                        startRow,
                        pageSize,
                        Key}, this.GetRefundListOperationCompleted, userState);
        }
        
        private void OnGetRefundListOperationCompleted(object arg) {
            if ((this.GetRefundListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundListCompleted(this, new GetRefundListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRefundCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRefundCount(string PackNo, string MinApplyDate, string MaxApplyDate, string Key) {
            object[] results = this.Invoke("GetRefundCount", new object[] {
                        PackNo,
                        MinApplyDate,
                        MaxApplyDate,
                        Key});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundCountAsync(string PackNo, string MinApplyDate, string MaxApplyDate, string Key) {
            this.GetRefundCountAsync(PackNo, MinApplyDate, MaxApplyDate, Key, null);
        }
        
        /// <remarks/>
        public void GetRefundCountAsync(string PackNo, string MinApplyDate, string MaxApplyDate, string Key, object userState) {
            if ((this.GetRefundCountOperationCompleted == null)) {
                this.GetRefundCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundCountOperationCompleted);
            }
            this.InvokeAsync("GetRefundCount", new object[] {
                        PackNo,
                        MinApplyDate,
                        MaxApplyDate,
                        Key}, this.GetRefundCountOperationCompleted, userState);
        }
        
        private void OnGetRefundCountOperationCompleted(object arg) {
            if ((this.GetRefundCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundCountCompleted(this, new GetRefundCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RefundLoad", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RefundLoad(string RowPointer, string Key) {
            object[] results = this.Invoke("RefundLoad", new object[] {
                        RowPointer,
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RefundLoadAsync(string RowPointer, string Key) {
            this.RefundLoadAsync(RowPointer, Key, null);
        }
        
        /// <remarks/>
        public void RefundLoadAsync(string RowPointer, string Key, object userState) {
            if ((this.RefundLoadOperationCompleted == null)) {
                this.RefundLoadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefundLoadOperationCompleted);
            }
            this.InvokeAsync("RefundLoad", new object[] {
                        RowPointer,
                        Key}, this.RefundLoadOperationCompleted, userState);
        }
        
        private void OnRefundLoadOperationCompleted(object arg) {
            if ((this.RefundLoadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefundLoadCompleted(this, new RefundLoadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Refund_CR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Refund_CR(string RefundID, string Key) {
            object[] results = this.Invoke("Refund_CR", new object[] {
                        RefundID,
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Refund_CRAsync(string RefundID, string Key) {
            this.Refund_CRAsync(RefundID, Key, null);
        }
        
        /// <remarks/>
        public void Refund_CRAsync(string RefundID, string Key, object userState) {
            if ((this.Refund_CROperationCompleted == null)) {
                this.Refund_CROperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefund_CROperationCompleted);
            }
            this.InvokeAsync("Refund_CR", new object[] {
                        RefundID,
                        Key}, this.Refund_CROperationCompleted, userState);
        }
        
        private void OnRefund_CROperationCompleted(object arg) {
            if ((this.Refund_CRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Refund_CRCompleted(this, new Refund_CRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCRDispositList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCRDispositList(string ParkNo, string MinDate, string MaxDate, string State, int startRow, int pageSize, string Key) {
            object[] results = this.Invoke("GetCRDispositList", new object[] {
                        ParkNo,
                        MinDate,
                        MaxDate,
                        State,
                        startRow,
                        pageSize,
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCRDispositListAsync(string ParkNo, string MinDate, string MaxDate, string State, int startRow, int pageSize, string Key) {
            this.GetCRDispositListAsync(ParkNo, MinDate, MaxDate, State, startRow, pageSize, Key, null);
        }
        
        /// <remarks/>
        public void GetCRDispositListAsync(string ParkNo, string MinDate, string MaxDate, string State, int startRow, int pageSize, string Key, object userState) {
            if ((this.GetCRDispositListOperationCompleted == null)) {
                this.GetCRDispositListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCRDispositListOperationCompleted);
            }
            this.InvokeAsync("GetCRDispositList", new object[] {
                        ParkNo,
                        MinDate,
                        MaxDate,
                        State,
                        startRow,
                        pageSize,
                        Key}, this.GetCRDispositListOperationCompleted, userState);
        }
        
        private void OnGetCRDispositListOperationCompleted(object arg) {
            if ((this.GetCRDispositListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCRDispositListCompleted(this, new GetCRDispositListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCRDispositCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCRDispositCount(string ParkNo, string MinDate, string MaxDate, string State, string Key) {
            object[] results = this.Invoke("GetCRDispositCount", new object[] {
                        ParkNo,
                        MinDate,
                        MaxDate,
                        State,
                        Key});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCRDispositCountAsync(string ParkNo, string MinDate, string MaxDate, string State, string Key) {
            this.GetCRDispositCountAsync(ParkNo, MinDate, MaxDate, State, Key, null);
        }
        
        /// <remarks/>
        public void GetCRDispositCountAsync(string ParkNo, string MinDate, string MaxDate, string State, string Key, object userState) {
            if ((this.GetCRDispositCountOperationCompleted == null)) {
                this.GetCRDispositCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCRDispositCountOperationCompleted);
            }
            this.InvokeAsync("GetCRDispositCount", new object[] {
                        ParkNo,
                        MinDate,
                        MaxDate,
                        State,
                        Key}, this.GetCRDispositCountOperationCompleted, userState);
        }
        
        private void OnGetCRDispositCountOperationCompleted(object arg) {
            if ((this.GetCRDispositCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCRDispositCountCompleted(this, new GetCRDispositCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CRDispositLoad", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CRDispositLoad(string RefundID, string Key) {
            object[] results = this.Invoke("CRDispositLoad", new object[] {
                        RefundID,
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CRDispositLoadAsync(string RefundID, string Key) {
            this.CRDispositLoadAsync(RefundID, Key, null);
        }
        
        /// <remarks/>
        public void CRDispositLoadAsync(string RefundID, string Key, object userState) {
            if ((this.CRDispositLoadOperationCompleted == null)) {
                this.CRDispositLoadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCRDispositLoadOperationCompleted);
            }
            this.InvokeAsync("CRDispositLoad", new object[] {
                        RefundID,
                        Key}, this.CRDispositLoadOperationCompleted, userState);
        }
        
        private void OnCRDispositLoadOperationCompleted(object arg) {
            if ((this.CRDispositLoadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CRDispositLoadCompleted(this, new CRDispositLoadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Refund_Disposrit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Refund_Disposrit(string RefundID, string Key) {
            object[] results = this.Invoke("Refund_Disposrit", new object[] {
                        RefundID,
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Refund_DisposritAsync(string RefundID, string Key) {
            this.Refund_DisposritAsync(RefundID, Key, null);
        }
        
        /// <remarks/>
        public void Refund_DisposritAsync(string RefundID, string Key, object userState) {
            if ((this.Refund_DisposritOperationCompleted == null)) {
                this.Refund_DisposritOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefund_DisposritOperationCompleted);
            }
            this.InvokeAsync("Refund_Disposrit", new object[] {
                        RefundID,
                        Key}, this.Refund_DisposritOperationCompleted, userState);
        }
        
        private void OnRefund_DisposritOperationCompleted(object arg) {
            if ((this.Refund_DisposritCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Refund_DisposritCompleted(this, new Refund_DisposritCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetCompRepairFee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetCompRepairFee(string SANo, decimal MaterialAmount, decimal ServiceAmount, string Key) {
            object[] results = this.Invoke("SetCompRepairFee", new object[] {
                        SANo,
                        MaterialAmount,
                        ServiceAmount,
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetCompRepairFeeAsync(string SANo, decimal MaterialAmount, decimal ServiceAmount, string Key) {
            this.SetCompRepairFeeAsync(SANo, MaterialAmount, ServiceAmount, Key, null);
        }
        
        /// <remarks/>
        public void SetCompRepairFeeAsync(string SANo, decimal MaterialAmount, decimal ServiceAmount, string Key, object userState) {
            if ((this.SetCompRepairFeeOperationCompleted == null)) {
                this.SetCompRepairFeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCompRepairFeeOperationCompleted);
            }
            this.InvokeAsync("SetCompRepairFee", new object[] {
                        SANo,
                        MaterialAmount,
                        ServiceAmount,
                        Key}, this.SetCompRepairFeeOperationCompleted, userState);
        }
        
        private void OnSetCompRepairFeeOperationCompleted(object arg) {
            if ((this.SetCompRepairFeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetCompRepairFeeCompleted(this, new SetCompRepairFeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetCustomer(
                    string CustNo, 
                    string CustName, 
                    string CustShortName, 
                    string CustType, 
                    string Representative, 
                    string BusinessScope, 
                    string CustLicenseNo, 
                    string RepIDCard, 
                    string CustContact, 
                    string CustTel, 
                    string CustContactMobile, 
                    string CustEmail, 
                    string CustBankTitle, 
                    string CustBankAccount, 
                    string CustBank, 
                    bool IsExternal, 
                    string UserName, 
                    string Type, 
                    string Key) {
            object[] results = this.Invoke("SetCustomer", new object[] {
                        CustNo,
                        CustName,
                        CustShortName,
                        CustType,
                        Representative,
                        BusinessScope,
                        CustLicenseNo,
                        RepIDCard,
                        CustContact,
                        CustTel,
                        CustContactMobile,
                        CustEmail,
                        CustBankTitle,
                        CustBankAccount,
                        CustBank,
                        IsExternal,
                        UserName,
                        Type,
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetCustomerAsync(
                    string CustNo, 
                    string CustName, 
                    string CustShortName, 
                    string CustType, 
                    string Representative, 
                    string BusinessScope, 
                    string CustLicenseNo, 
                    string RepIDCard, 
                    string CustContact, 
                    string CustTel, 
                    string CustContactMobile, 
                    string CustEmail, 
                    string CustBankTitle, 
                    string CustBankAccount, 
                    string CustBank, 
                    bool IsExternal, 
                    string UserName, 
                    string Type, 
                    string Key) {
            this.SetCustomerAsync(CustNo, CustName, CustShortName, CustType, Representative, BusinessScope, CustLicenseNo, RepIDCard, CustContact, CustTel, CustContactMobile, CustEmail, CustBankTitle, CustBankAccount, CustBank, IsExternal, UserName, Type, Key, null);
        }
        
        /// <remarks/>
        public void SetCustomerAsync(
                    string CustNo, 
                    string CustName, 
                    string CustShortName, 
                    string CustType, 
                    string Representative, 
                    string BusinessScope, 
                    string CustLicenseNo, 
                    string RepIDCard, 
                    string CustContact, 
                    string CustTel, 
                    string CustContactMobile, 
                    string CustEmail, 
                    string CustBankTitle, 
                    string CustBankAccount, 
                    string CustBank, 
                    bool IsExternal, 
                    string UserName, 
                    string Type, 
                    string Key, 
                    object userState) {
            if ((this.SetCustomerOperationCompleted == null)) {
                this.SetCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCustomerOperationCompleted);
            }
            this.InvokeAsync("SetCustomer", new object[] {
                        CustNo,
                        CustName,
                        CustShortName,
                        CustType,
                        Representative,
                        BusinessScope,
                        CustLicenseNo,
                        RepIDCard,
                        CustContact,
                        CustTel,
                        CustContactMobile,
                        CustEmail,
                        CustBankTitle,
                        CustBankAccount,
                        CustBank,
                        IsExternal,
                        UserName,
                        Type,
                        Key}, this.SetCustomerOperationCompleted, userState);
        }
        
        private void OnSetCustomerOperationCompleted(object arg) {
            if ((this.SetCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetCustomerCompleted(this, new SetCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCustomer(string CustNo, string Status, string RefundDate) {
            object[] results = this.Invoke("UpdateCustomer", new object[] {
                        CustNo,
                        Status,
                        RefundDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCustomerAsync(string CustNo, string Status, string RefundDate) {
            this.UpdateCustomerAsync(CustNo, Status, RefundDate, null);
        }
        
        /// <remarks/>
        public void UpdateCustomerAsync(string CustNo, string Status, string RefundDate, object userState) {
            if ((this.UpdateCustomerOperationCompleted == null)) {
                this.UpdateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCustomerOperationCompleted);
            }
            this.InvokeAsync("UpdateCustomer", new object[] {
                        CustNo,
                        Status,
                        RefundDate}, this.UpdateCustomerOperationCompleted, userState);
        }
        
        private void OnUpdateCustomerOperationCompleted(object arg) {
            if ((this.UpdateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCustomerCompleted(this, new UpdateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStatisticsList_Resourse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetStatisticsList_Resourse(string ParkNo, string StartDate, string EndDate, string KEY) {
            object[] results = this.Invoke("GetStatisticsList_Resourse", new object[] {
                        ParkNo,
                        StartDate,
                        EndDate,
                        KEY});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatisticsList_ResourseAsync(string ParkNo, string StartDate, string EndDate, string KEY) {
            this.GetStatisticsList_ResourseAsync(ParkNo, StartDate, EndDate, KEY, null);
        }
        
        /// <remarks/>
        public void GetStatisticsList_ResourseAsync(string ParkNo, string StartDate, string EndDate, string KEY, object userState) {
            if ((this.GetStatisticsList_ResourseOperationCompleted == null)) {
                this.GetStatisticsList_ResourseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatisticsList_ResourseOperationCompleted);
            }
            this.InvokeAsync("GetStatisticsList_Resourse", new object[] {
                        ParkNo,
                        StartDate,
                        EndDate,
                        KEY}, this.GetStatisticsList_ResourseOperationCompleted, userState);
        }
        
        private void OnGetStatisticsList_ResourseOperationCompleted(object arg) {
            if ((this.GetStatisticsList_ResourseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatisticsList_ResourseCompleted(this, new GetStatisticsList_ResourseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStatisticsList_Resourse_List", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetStatisticsList_Resourse_List(string ParkNo, string StartDate, string EndDate, string KEY) {
            object[] results = this.Invoke("GetStatisticsList_Resourse_List", new object[] {
                        ParkNo,
                        StartDate,
                        EndDate,
                        KEY});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatisticsList_Resourse_ListAsync(string ParkNo, string StartDate, string EndDate, string KEY) {
            this.GetStatisticsList_Resourse_ListAsync(ParkNo, StartDate, EndDate, KEY, null);
        }
        
        /// <remarks/>
        public void GetStatisticsList_Resourse_ListAsync(string ParkNo, string StartDate, string EndDate, string KEY, object userState) {
            if ((this.GetStatisticsList_Resourse_ListOperationCompleted == null)) {
                this.GetStatisticsList_Resourse_ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatisticsList_Resourse_ListOperationCompleted);
            }
            this.InvokeAsync("GetStatisticsList_Resourse_List", new object[] {
                        ParkNo,
                        StartDate,
                        EndDate,
                        KEY}, this.GetStatisticsList_Resourse_ListOperationCompleted, userState);
        }
        
        private void OnGetStatisticsList_Resourse_ListOperationCompleted(object arg) {
            if ((this.GetStatisticsList_Resourse_ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatisticsList_Resourse_ListCompleted(this, new GetStatisticsList_Resourse_ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStatisticsList_Resourse_Charts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetStatisticsList_Resourse_Charts(string ParkNo, string StartDate, string EndDate, string KEY) {
            object[] results = this.Invoke("GetStatisticsList_Resourse_Charts", new object[] {
                        ParkNo,
                        StartDate,
                        EndDate,
                        KEY});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatisticsList_Resourse_ChartsAsync(string ParkNo, string StartDate, string EndDate, string KEY) {
            this.GetStatisticsList_Resourse_ChartsAsync(ParkNo, StartDate, EndDate, KEY, null);
        }
        
        /// <remarks/>
        public void GetStatisticsList_Resourse_ChartsAsync(string ParkNo, string StartDate, string EndDate, string KEY, object userState) {
            if ((this.GetStatisticsList_Resourse_ChartsOperationCompleted == null)) {
                this.GetStatisticsList_Resourse_ChartsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatisticsList_Resourse_ChartsOperationCompleted);
            }
            this.InvokeAsync("GetStatisticsList_Resourse_Charts", new object[] {
                        ParkNo,
                        StartDate,
                        EndDate,
                        KEY}, this.GetStatisticsList_Resourse_ChartsOperationCompleted, userState);
        }
        
        private void OnGetStatisticsList_Resourse_ChartsOperationCompleted(object arg) {
            if ((this.GetStatisticsList_Resourse_ChartsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatisticsList_Resourse_ChartsCompleted(this, new GetStatisticsList_Resourse_ChartsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConferenceRoomReserveList_Resource", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetConferenceRoomReserveList_Resource(string ParkNo, string Date) {
            object[] results = this.Invoke("GetConferenceRoomReserveList_Resource", new object[] {
                        ParkNo,
                        Date});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetConferenceRoomReserveList_ResourceAsync(string ParkNo, string Date) {
            this.GetConferenceRoomReserveList_ResourceAsync(ParkNo, Date, null);
        }
        
        /// <remarks/>
        public void GetConferenceRoomReserveList_ResourceAsync(string ParkNo, string Date, object userState) {
            if ((this.GetConferenceRoomReserveList_ResourceOperationCompleted == null)) {
                this.GetConferenceRoomReserveList_ResourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConferenceRoomReserveList_ResourceOperationCompleted);
            }
            this.InvokeAsync("GetConferenceRoomReserveList_Resource", new object[] {
                        ParkNo,
                        Date}, this.GetConferenceRoomReserveList_ResourceOperationCompleted, userState);
        }
        
        private void OnGetConferenceRoomReserveList_ResourceOperationCompleted(object arg) {
            if ((this.GetConferenceRoomReserveList_ResourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConferenceRoomReserveList_ResourceCompleted(this, new GetConferenceRoomReserveList_ResourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetRefundListCompletedEventHandler(object sender, GetRefundListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetRefundCountCompletedEventHandler(object sender, GetRefundCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RefundLoadCompletedEventHandler(object sender, RefundLoadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefundLoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefundLoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Refund_CRCompletedEventHandler(object sender, Refund_CRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Refund_CRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Refund_CRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCRDispositListCompletedEventHandler(object sender, GetCRDispositListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCRDispositListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCRDispositListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCRDispositCountCompletedEventHandler(object sender, GetCRDispositCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCRDispositCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCRDispositCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CRDispositLoadCompletedEventHandler(object sender, CRDispositLoadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CRDispositLoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CRDispositLoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Refund_DisposritCompletedEventHandler(object sender, Refund_DisposritCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Refund_DisposritCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Refund_DisposritCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetCompRepairFeeCompletedEventHandler(object sender, SetCompRepairFeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetCompRepairFeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetCompRepairFeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetCustomerCompletedEventHandler(object sender, SetCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateCustomerCompletedEventHandler(object sender, UpdateCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStatisticsList_ResourseCompletedEventHandler(object sender, GetStatisticsList_ResourseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatisticsList_ResourseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatisticsList_ResourseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStatisticsList_Resourse_ListCompletedEventHandler(object sender, GetStatisticsList_Resourse_ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatisticsList_Resourse_ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatisticsList_Resourse_ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStatisticsList_Resourse_ChartsCompletedEventHandler(object sender, GetStatisticsList_Resourse_ChartsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatisticsList_Resourse_ChartsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatisticsList_Resourse_ChartsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetConferenceRoomReserveList_ResourceCompletedEventHandler(object sender, GetConferenceRoomReserveList_ResourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConferenceRoomReserveList_ResourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConferenceRoomReserveList_ResourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591